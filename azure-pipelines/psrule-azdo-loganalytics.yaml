name: PSRule-ADO

pool: MSHosted-WorkloadsPool

variables:
  # Set to your variable group containing variables
  - group: azdo-psrule-run
  - name: reportOutputPath
    value: "$(Build.ArtifactStagingDirectory)/export"

# schedules:
#   - cron: "0 6 * * *"
#     displayName: Run every day at 6am
#     branches:
#       include:
#         - "*"

trigger:
  - main
  - users/wcamargo/*

stages:
  - stage: Run
    displayName: Run
    jobs:
      - job: Run
        displayName: Run PSRule.Rules.AzureDevOps

        steps:
          - checkout: self
            persistCredentials: true

          - task: PowerShell@2
            displayName: "Install PSGallery Powershell Modules"
            inputs:
              targetType: inline
              pwsh: true
              script: |
                Write-Host "##[group]Installing PSGallery Powershell Modules"

                $installedModule = Get-InstalledModule -Name PSRule.Rules.AzureDevOps -ErrorAction SilentlyContinue

                if ($installedModule) {
                    Uninstall-Module -Name PSRule.Rules.AzureDevOps -AllVersions
                }

                $installedPSResource = Get-InstalledPSResource -Name PSRule.Rules.AzureDevOps -ErrorAction SilentlyContinue

                if ($installedPSResource) {
                    Uninstall-PSResource -Name PSRule.Rules.AzureDevOps 
                }

                Install-Module PSRule -Scope CurrentUser -Repository PSGallery -Force -RequiredVersion 2.9.0
                Install-Module -Name Microsoft.PowerShell.PSResourceGet -Repository PSGallery -Force
                Install-Module -Name PSRule.Monitor -Repository PSGallery -Force
                Install-Module -Name Microsoft.PowerShell.SecretStore -Repository PSGallery -Force
                Install-Module -Name Microsoft.PowerShell.SecretManagement -Repository PSGallery -Force

                Write-Host "PSGallery modules installed"

                Write-Host "##[endgroup]"

          - task: PowerShell@2
            displayName: "Install PSGallery Powershell Modules Inline"
            inputs:
              targetType: inline
              pwsh: true
              script: |
                $ArtifactFeed = @{
                  OrganizationName = '$(azureDevOpsArtifactOrganizationName)'
                  ProjectName = '$(azureDevOpsArtifactProjectName)'
                  FeedName = '$(azureDevOpsArtifactProjectNameFeedName)'
                  PatUser = '$(azureDevOpsArtifactPatUser)'
                  PatToken = '$(azureDevOpsArtifactPatToken)'
                  CustomModules = @('PSRule.Rules.AzureDevOps')    
                }

                . "$(Pipeline.Workspace)/s/src/scripts/Initialize-ArtifactFeed.ps1" @ArtifactFeed

          - task: PowerShell@2
            displayName: "Exporting Azure DevOps data"
            inputs:
              targetType: inline
              pwsh: true
              script: |
                $ExportAzDo = @{
                  TargetAzureDevOpsOrganizationName = "$(targetAzureDevOpsOrganizationName)"  
                  TargetAzureDevOpsOrganizationID = "$(targetAzureDevOpsOrganizationID)"  
                  LogAnalyticsWorkspaceId = "$(logAnalyticsWorkspaceId)"  
                  LogAnalyticsSharedKey = "$(logAnalyticsSharedKey)"  
                  TenantId = "$(tenantId)"  
                  ClientId = "$(clientId)"  
                  ClientSecret = "$(clientSecret)"  
                  ReportOutputPath = "$(Build.ArtifactStagingDirectory)/export"    
                }

                . "$(Pipeline.Workspace)/s/src/scripts/Export-AzureDevOpsData.ps1" @ExportAzDo

          - task: PowerShell@2
            displayName: "Run PSRule Analysis"
            inputs:
              filePath: "$(Pipeline.Workspace)/s/src/scripts/Invoke-AzDevOpsPSRuleAnalysis.ps1"
              pwsh: true
              arguments: >
                -LogAnalyticsWorkspaceId '$(logAnalyticsWorkspaceId)'
                -LogAnalyticsSharedKey '$(logAnalyticsSharedKey)'
                -ReportOutputPath '$(Build.ArtifactStagingDirectory)/export'

          - task: PublishPipelineArtifact@1
            displayName: Publishing PSRule Analysis
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/export
              artifactName: AzureDevOpsData
